[/
    Copyright (c) 2019 Vinnie Falco (vinnie dot falco at gmail dot com)

    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

    Official repository: https://github.com/vinniefalco/json
]

[library Boost.JSON
    [id json]
    [quickbook 1.6]
    [copyright 2019 Vinnie Falco]
    [purpose JSON Library]
    [license
        Distributed under the Boost Software License, Version 1.0.
        (See accompanying file LICENSE_1_0.txt or copy at
        [@http://www.boost.org/LICENSE_1_0.txt])
    ]
    [authors [Falco, Vinnie]]
    [category template]
    [category generic]
]

[template mdash[] '''&mdash; ''']
[template indexterm1[term1] '''<indexterm><primary>'''[term1]'''</primary></indexterm>''']
[template indexterm2[term1 term2] '''<indexterm><primary>'''[term1]'''</primary><secondary>'''[term2]'''</secondary></indexterm>''']

[template include_file[path][^<'''<ulink url="https://github.com/vinniefalco/json/blob/master/include/'''[path]'''">'''[path]'''</ulink>'''>]]
[template issue[n] '''<ulink url="https://github.com/vinniefalco/json/issues/'''[n]'''">#'''[n]'''</ulink>''']

[/ Named Requirements ]

[def __Allocator__              [@https://en.cppreference.com/w/cpp/named_req/Allocator ['Allocator]]]
[def __CopyAssignable__         [@https://en.cppreference.com/w/cpp/named_req/CopyAssignable ['CopyAssignable]]]
[def __CopyConstructible__      [@https://en.cppreference.com/w/cpp/named_req/CopyConstructible ['CopyConstructible]]]
[def __DefaultConstructible__   [@https://en.cppreference.com/w/cpp/named_req/DefaultConstructible ['DefaultConstructible]]]
[def __Hash__                   [@https://en.cppreference.com/w/cpp/named_req/Hash ['Hash]]]
[def __InputIterator__          [@https://en.cppreference.com/w/cpp/named_req/InputIterator ['InputIterator]]]
[def __MoveAssignable__         [@https://en.cppreference.com/w/cpp/named_req/MoveAssignable ['MoveAssignable]]]
[def __MoveConstructible__      [@https://en.cppreference.com/w/cpp/named_req/MoveConstructible ['MoveConstructible]]]
[def __Swappable__              [@https://en.cppreference.com/w/cpp/named_req/Swappable ['Swappable]]]

[def __Copyable__               [@https://en.cppreference.com/w/cpp/concepts/copyable ['Copyable]]]
[def __SemiRegular__            [@https://en.cppreference.com/w/cpp/concepts/semiregular ['SemiRegular]]]

[def __array__                  [link json.ref.boost__json__array `array`]]
[def __basic_parser__           [link json.ref.boost__json__basic_parser `basic_parser`]]
[def __block_storage__          [link json.ref.boost__json__block_storage `block_storage`]]
[def __key_value_pair__         [link json.ref.boost__json__key_value_pair `key_value_pair`]]
[def __kind__                   [link json.ref.boost__json__kind `kind`]]
[def __number__                 [link json.ref.boost__json__number `number`]]
[def __object__                 [link json.ref.boost__json__object `object`]]
[def __parse__                  [link json.ref.boost__json__parse `parse`]]
[def __parser__                 [link json.ref.boost__json__parser `parser`]]
[def __value__                  [link json.ref.boost__json__value `value`]]
[def __serializer__             [link json.ref.boost__json__serializer `serializer`]]
[def __storage__                [link json.ref.boost__json__storage `storage`]]
[def __storage_ptr__            [link json.ref.boost__json__storage_ptr `storage_ptr`]]
[def __string__                 [link json.ref.boost__json__string `string`]]
[def __to_string__              [link json.ref.boost__json__to_string `to_string`]]

[def __initializer_list__       [@https://en.cppreference.com/w/cpp/utility/initializer_list]]
[def __memory_resource__        [@https://en.cppreference.com/w/cpp/memory/memory_resource `std::pmr::memory_resource`]]
[def __polymorphic_allocator__  [@https://en.cppreference.com/w/cpp/memory/polymorphic_allocator `std::pmr::polymorphic_allocator`]]
[def __shared_ptr__             [@https://en.cppreference.com/w/cpp/memory/shared_ptr `std::shared_ptr`]]
[def __std_string__             [@https://en.cppreference.com/w/cpp/string/basic_string `std::string`]]
[def __std_unordered_map__      [@https://en.cppreference.com/w/cpp/container/unordered_map `std::unordered_map`]]
[def __std_vector__             [@https://en.cppreference.com/w/cpp/container/vector `std::vector`]]

[/ Dingbats ]

[def __good__ [role green \u2714]]
[def __bad__  [role red   \u2718]]

[/-----------------------------------------------------------------------------]

[import ../../example/pretty.cpp]
[import ../../example/validate.cpp]
[import ../../include/boost/json/impl/serializer.ipp]

[/-----------------------------------------------------------------------------]

Boost.JSON is a portable C++ library which implements the
[@https://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf JSON Data Interchange Syntax],
providing algorithms for parsing and serialization, as well as a robust
and performant container to permit inspection and modification of JSON Text
in memory.

[variablelist
    [[
        [link json.overview Overview]
    ][
        A review of the requirements and features included in Boost.JSON,
        rationale and design information, answers to frequently
        asked questions, and credits.
    ]]
    [[
        [link json.usage Usage]
    ][
        How to use the library to perform common tasks with JSON,
        including some examples.
    ]]
    [[
        [link json.examples Examples]
    ][
        Some example programs which demonstrate the use of the
        library to perform specific tasks.
    ]]
    [[
        [link json.comparison Comparison]
    ][
        Compares the design and usage of this library against
        many other existing libraries.
    ]]
    [[
        [link json.benchmarks Benchmarks]
    ][
        Shows the performance of this library for typical workloads
        against the performance of other popular existing libraries.
    ]]
    [[
        [link json.quickref Reference]
    ][
        Detailed function and type reference.
    ]]
]

[include 01_overview.qbk]
[include 02_usage.qbk]
[include 03_examples.qbk]
[include 04_comparison.qbk]
[include 05_benchmarks.qbk]

[section:quickref Reference]
[xinclude quickref.xml]
[endsect]
[section:ref Reference]
[include reference.qbk]
[endsect]

[xinclude index.xml]
